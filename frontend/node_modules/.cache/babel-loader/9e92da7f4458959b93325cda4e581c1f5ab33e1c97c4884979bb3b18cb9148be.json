{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Calendar,momentLocalizer}from'react-big-calendar';import moment from'moment';import axios from'axios';import Modal from'react-modal';import DatePicker from'react-datepicker';import TimePicker from'react-time-picker';import'react-big-calendar/lib/css/react-big-calendar.css';import'./PostScheduler.css';import'react-datepicker/dist/react-datepicker.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const localizer=momentLocalizer(moment);Modal.setAppElement('#root');const PostScheduler=()=>{const[modalIsOpen,setModalIsOpen]=useState(false);const[selectedDate,setSelectedDate]=useState(new Date());const[selectedTime,setSelectedTime]=useState('10:00');const[events,setEvents]=useState([]);const[postDetails,setPostDetails]=useState({title:'',description:''});const[editingEventId,setEditingEventId]=useState(null);const openModal=()=>setModalIsOpen(true);const closeModal=()=>{setModalIsOpen(false);setEditingEventId(null);setPostDetails({title:'',description:'',image:null});};const handleDateChange=date=>setSelectedDate(date);const handleTimeChange=time=>setSelectedTime(time);const handleInputChange=e=>setPostDetails({...postDetails,[e.target.name]:e.target.value});const handleImageChange=e=>setPostDetails({...postDetails,image:e.target.files[0]});const handleSubmit=async e=>{e.preventDefault();const eventDate=moment(selectedDate).set({hour:moment(selectedTime,'HH:mm').hour(),minute:moment(selectedTime,'HH:mm').minute()}).toDate();const formData=new FormData();formData.append('title',postDetails.title);formData.append('description',postDetails.description);formData.append('date',eventDate);formData.append('image',postDetails.image);try{await axios.post('/api/auth/schedule-post',{title:postDetails.title,description:postDetails.description,date:eventDate});setEvents([...events,{title:postDetails.title,start:eventDate,end:eventDate}]);closeModal();}catch(error){console.error('Error scheduling post:',error);}};const handleEventSelect=event=>{setEditingEventId(event.id);setPostDetails({title:event.title,description:event.description});setSelectedDate(new Date(event.start));setSelectedTime(moment(event.start).format('HH:mm'));openModal();};const handleUpdate=async()=>{// Similar to handleSubmit, but for updating an existing event\n};const handleDelete=async()=>{// Send delete request to the server\n};useEffect(()=>{const fetchScheduledPosts=async()=>{try{const response=await axios.get('/api/auth/scheduled-posts');const fetchedEvents=response.data.map(post=>({title:post.title,start:new Date(post.date),end:new Date(post.date)}));setEvents(fetchedEvents);}catch(error){console.error('Error fetching scheduled posts:',error);}};fetchScheduledPosts();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"post-scheduler\",children:[/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:events,startAccessor:\"start\",endAccessor:\"end\",style:{height:500,margin:'50px'},onSelectEvent:handleEventSelect,views:['month','week','day']}),/*#__PURE__*/_jsx(\"button\",{className:\"add-post-btn\",onClick:openModal,children:\"Add Post\"}),/*#__PURE__*/_jsx(Modal,{isOpen:modalIsOpen,onRequestClose:closeModal,className:\"modal\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"modal-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingEventId?'Edit Post':'Schedule a Post'}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",value:postDetails.title,onChange:handleInputChange,placeholder:\"Title\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",value:postDetails.description,onChange:handleInputChange,placeholder:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"image\",onChange:handleImageChange}),/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:handleDateChange}),/*#__PURE__*/_jsx(TimePicker,{onChange:handleTimeChange,value:selectedTime}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",children:editingEventId?'Update':'Schedule'}),editingEventId&&/*#__PURE__*/_jsx(\"button\",{onClick:handleDelete,className:\"delete-btn\",children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeModal,className:\"cancel-btn\",children:\"Cancel\"})]})})]});};export default PostScheduler;","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","axios","Modal","DatePicker","TimePicker","jsx","_jsx","jsxs","_jsxs","localizer","setAppElement","PostScheduler","modalIsOpen","setModalIsOpen","selectedDate","setSelectedDate","Date","selectedTime","setSelectedTime","events","setEvents","postDetails","setPostDetails","title","description","editingEventId","setEditingEventId","openModal","closeModal","image","handleDateChange","date","handleTimeChange","time","handleInputChange","e","target","name","value","handleImageChange","files","handleSubmit","preventDefault","eventDate","set","hour","minute","toDate","formData","FormData","append","post","start","end","error","console","handleEventSelect","event","id","format","handleUpdate","handleDelete","fetchScheduledPosts","response","get","fetchedEvents","data","map","className","children","startAccessor","endAccessor","style","height","margin","onSelectEvent","views","onClick","isOpen","onRequestClose","onSubmit","type","onChange","placeholder","selected"],"sources":["C:/Users/groop/social_media_dashboard/frontend/src/components/PostScheduler.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\nimport DatePicker from 'react-datepicker';\r\nimport TimePicker from 'react-time-picker';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport './PostScheduler.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PostScheduler = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedTime, setSelectedTime] = useState('10:00');\r\n  const [events, setEvents] = useState([]);\r\n  const [postDetails, setPostDetails] = useState({ title: '', description: '' });\r\n  const [editingEventId, setEditingEventId] = useState(null);\r\n\r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n    setEditingEventId(null);\r\n    setPostDetails({ title: '', description: '', image: null });\r\n  };\r\n\r\n  const handleDateChange = date => setSelectedDate(date);\r\n  const handleTimeChange = time => setSelectedTime(time);\r\n  const handleInputChange = e => setPostDetails({ ...postDetails, [e.target.name]: e.target.value });\r\n  const handleImageChange = e => setPostDetails({ ...postDetails, image: e.target.files[0] });\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const eventDate = moment(selectedDate).set({\r\n      hour: moment(selectedTime, 'HH:mm').hour(),\r\n      minute: moment(selectedTime, 'HH:mm').minute(),\r\n    }).toDate();\r\n\r\n    const formData = new FormData();\r\n    formData.append('title', postDetails.title);\r\n    formData.append('description', postDetails.description);\r\n    formData.append('date', eventDate);\r\n    formData.append('image', postDetails.image);\r\n  \r\n    try {\r\n      await axios.post('/api/auth/schedule-post', {\r\n        title: postDetails.title,\r\n        description: postDetails.description,\r\n        date: eventDate,\r\n      });\r\n      setEvents([...events, { title: postDetails.title, start: eventDate, end: eventDate }]);\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error('Error scheduling post:', error);\r\n    }\r\n  };\r\n\r\n  const handleEventSelect = event => {\r\n    setEditingEventId(event.id);\r\n    setPostDetails({ title: event.title, description: event.description });\r\n    setSelectedDate(new Date(event.start));\r\n    setSelectedTime(moment(event.start).format('HH:mm'));\r\n    openModal();\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    // Similar to handleSubmit, but for updating an existing event\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    // Send delete request to the server\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchScheduledPosts = async () => {\r\n      try {\r\n        const response = await axios.get('/api/auth/scheduled-posts');\r\n        const fetchedEvents = response.data.map(post => ({\r\n          title: post.title,\r\n          start: new Date(post.date),\r\n          end: new Date(post.date),\r\n        }));\r\n        setEvents(fetchedEvents);\r\n      } catch (error) {\r\n        console.error('Error fetching scheduled posts:', error);\r\n      }\r\n    };\r\n  \r\n    fetchScheduledPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"post-scheduler\">\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500, margin: '50px' }}\r\n        onSelectEvent={handleEventSelect}\r\n        views={['month', 'week', 'day']}\r\n      />\r\n      <button className=\"add-post-btn\" onClick={openModal}>Add Post</button>\r\n      \r\n      <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className=\"modal\">\r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <h2>{editingEventId ? 'Edit Post' : 'Schedule a Post'}</h2>\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\" \r\n            value={postDetails.title}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Title\" \r\n          />\r\n          <textarea \r\n            name=\"description\" \r\n            value={postDetails.description}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Description\"\r\n          />\r\n          <input \r\n            type=\"file\" \r\n            name=\"image\"\r\n            onChange={handleImageChange}\r\n          />\r\n          <DatePicker selected={selectedDate} onChange={handleDateChange} />\r\n          <TimePicker onChange={handleTimeChange} value={selectedTime} />\r\n          <button type=\"submit\" className=\"submit-btn\">{editingEventId ? 'Update' : 'Schedule'}</button>\r\n          {editingEventId && <button onClick={handleDelete} className=\"delete-btn\">Delete</button>}\r\n          <button onClick={closeModal} className=\"cancel-btn\">Cancel</button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostScheduler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}