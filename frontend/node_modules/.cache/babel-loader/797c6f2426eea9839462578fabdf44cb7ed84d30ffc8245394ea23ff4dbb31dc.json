{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AnalyticsChart=()=>{const[data,setData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');useEffect(()=>{const fetchAnalyticsData=async()=>{try{const response=await axios.get('/api/analytics');setData(response.data);}catch(error){console.error('Error fetching analytics data:',error);setError('Failed to fetch analytics data');}finally{setLoading(false);}};fetchAnalyticsData();},[]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading analytics data...\"});}if(error){return/*#__PURE__*/_jsx(\"p\",{children:error});}if(!Array.isArray(data)||data.length===0){return/*#__PURE__*/_jsx(\"p\",{children:\"No data available for chart\"});}return/*#__PURE__*/_jsxs(BarChart,{width:500,height:300,data:data,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"followers\",fill:\"#8884d8\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"posts\",fill:\"#82ca9d\"})]});};export default AnalyticsChart;","map":{"version":3,"names":["React","useState","useEffect","axios","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","AnalyticsChart","data","setData","loading","setLoading","error","setError","fetchAnalyticsData","response","get","console","children","Array","isArray","length","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill"],"sources":["C:/Users/groop/social_media_dashboard/frontend/src/components/AnalyticsChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst AnalyticsChart = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchAnalyticsData = async () => {\r\n            try {\r\n                const response = await axios.get('/api/analytics');\r\n                setData(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching analytics data:', error);\r\n                setError('Failed to fetch analytics data');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchAnalyticsData();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <p>Loading analytics data...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error}</p>;\r\n    }\r\n\r\n    if (!Array.isArray(data) || data.length === 0) {\r\n        return <p>No data available for chart</p>;\r\n    }\r\n\r\n    return (\r\n        <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"followers\" fill=\"#8884d8\" />\r\n            <Bar dataKey=\"posts\" fill=\"#82ca9d\" />\r\n        </BarChart>\r\n    );\r\n};\r\n\r\nexport default AnalyticsChart;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,GAAG,CAAEC,KAAK,CAAEC,KAAK,CAAEC,aAAa,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvF,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAoB,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAApB,KAAK,CAACqB,GAAG,CAAC,gBAAgB,CAAC,CAClDP,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC,CAC1B,CAAE,MAAOI,KAAK,CAAE,CACZK,OAAO,CAACL,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtDC,QAAQ,CAAC,gCAAgC,CAAC,CAC9C,CAAC,OAAS,CACNF,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAEDG,kBAAkB,CAAC,CAAC,CACxB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIJ,OAAO,CAAE,CACT,mBAAON,IAAA,MAAAc,QAAA,CAAG,2BAAyB,CAAG,CAAC,CAC3C,CAEA,GAAIN,KAAK,CAAE,CACP,mBAAOR,IAAA,MAAAc,QAAA,CAAIN,KAAK,CAAI,CAAC,CACzB,CAEA,GAAI,CAACO,KAAK,CAACC,OAAO,CAACZ,IAAI,CAAC,EAAIA,IAAI,CAACa,MAAM,GAAK,CAAC,CAAE,CAC3C,mBAAOjB,IAAA,MAAAc,QAAA,CAAG,6BAA2B,CAAG,CAAC,CAC7C,CAEA,mBACIZ,KAAA,CAACV,QAAQ,EACL0B,KAAK,CAAE,GAAI,CACXC,MAAM,CAAE,GAAI,CACZf,IAAI,CAAEA,IAAK,CACXgB,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAC,CAAEC,KAAK,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAE,CAAEC,MAAM,CAAE,CAAE,CAAE,CAAAV,QAAA,eAEnDd,IAAA,CAACJ,aAAa,EAAC6B,eAAe,CAAC,KAAK,CAAE,CAAC,cACvCzB,IAAA,CAACN,KAAK,EAACgC,OAAO,CAAC,MAAM,CAAE,CAAC,cACxB1B,IAAA,CAACL,KAAK,GAAE,CAAC,cACTK,IAAA,CAACH,OAAO,GAAE,CAAC,cACXG,IAAA,CAACF,MAAM,GAAE,CAAC,cACVE,IAAA,CAACP,GAAG,EAACiC,OAAO,CAAC,WAAW,CAACC,IAAI,CAAC,SAAS,CAAE,CAAC,cAC1C3B,IAAA,CAACP,GAAG,EAACiC,OAAO,CAAC,OAAO,CAACC,IAAI,CAAC,SAAS,CAAE,CAAC,EAChC,CAAC,CAEnB,CAAC,CAED,cAAe,CAAAxB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}