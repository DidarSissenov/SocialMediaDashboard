{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ClockHand;\nvar _react = require(\"react\");\nvar _reactSpring = require(\"react-spring\");\nvar _utils = require(\"../helpers/utils\");\nvar _constants = require(\"../helpers/constants\");\nvar _clockHand = require(\"./styles/clock-hand\");\nvar _math = require(\"../helpers/math\");\nvar _jsxRuntime = require(\"@emotion/react/jsx-runtime\");\nfunction rotate(r) {\n  return \"rotate(\".concat(r, \" \").concat(_constants.CLOCK_RADIUS, \" \").concat(_constants.CLOCK_RADIUS, \")\");\n}\nfunction getAngle(mode, time) {\n  const increments = _constants.CLOCK_VALUES[mode].increments;\n  const value = (0, _utils.getTimeValue)(mode, time);\n  return value * (360 / increments);\n}\nfunction ClockHand(_ref) {\n  let {\n    mode,\n    time\n  } = _ref;\n  const prevState = (0, _react.useRef)({\n    time,\n    mode\n  });\n  const dragCount = (0, _react.useRef)(0); // clockhand positioning\n\n  const inner = time.hour > 0 && time.hour <= 12;\n  const handLength = (0, _constants.getClockHandLength)(mode, inner);\n  const circlePosition = (0, _constants.getClockHandCirclePosition)(mode, inner);\n  const circleRadius = (0, _constants.getClockHandCircleRadius)(mode, inner);\n  const [anim, api] = (0, _reactSpring.useSpring)(() => {\n    return {\n      immediate: true,\n      rotation: getAngle(mode, time),\n      length: handLength,\n      position: circlePosition\n    };\n  });\n  const {\n    rotation,\n    length,\n    position\n  } = anim;\n  (0, _react.useEffect)(() => {\n    const current = rotation.get();\n    const next = getAngle(mode, time);\n    if (prevState.current.mode !== mode) {\n      dragCount.current = 0;\n      prevState.current.mode = mode; // mode changed, animate clockhand to next mode angle\n\n      const finalAngle = (0, _math.calcAnimationAngle)(current, next);\n      api.start({\n        immediate: false,\n        rotation: finalAngle,\n        length: handLength,\n        position: circlePosition\n      });\n    } else if (!(0, _utils.isSameTime)(prevState.current.time, time)) {\n      // time changed, no animation necessary - just update clockhand (without animation)\n      prevState.current.time = time;\n      dragCount.current++;\n      /*\n      TODO - consider making this a config option?\n      if on hour mode and `switchToMinuteOnHourSelect` is enabled, don't display\n      change in time, just wait for mode to change\n      */\n      // if (isHourMode(mode) && config.switchToMinuteOnHourSelect && dragCount.current < 2) {\n      // \treturn\n      // }\n\n      api.start({\n        immediate: true,\n        rotation: next,\n        length: handLength,\n        position: circlePosition\n      });\n    }\n  }, [circlePosition, handLength, mode, rotation, api, time]); // mini circle on clockhand between increments on minutes\n\n  const value = (0, _utils.getTimeValue)(mode, time);\n  let showIntermediateValueDisplay;\n  if (mode === _constants.MODE.MINUTES && value % 5) {\n    showIntermediateValueDisplay = (0, _jsxRuntime.jsx)(\"circle\", {\n      className: \"react-timekeeper__hand-intermediate-circle\",\n      css: _clockHand.intermediateMinuteCircle,\n      cx: _constants.CLOCK_RADIUS,\n      cy: _constants.NUMBER_OUTER_POSITION,\n      r: 4\n    });\n  }\n  return (0, _jsxRuntime.jsx)(\"svg\", {\n    width: _constants.CLOCK_SIZE,\n    height: _constants.CLOCK_SIZE,\n    viewBox: \"0 0 \".concat(_constants.CLOCK_SIZE, \" \").concat(_constants.CLOCK_SIZE),\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"react-timekeeper__clock-hand\",\n    children: (0, _jsxRuntime.jsxs)(_reactSpring.animated.g, {\n      transform: rotation.to(a => rotate(a)),\n      children: [(0, _jsxRuntime.jsx)(_reactSpring.animated.line, {\n        className: \"react-timekeeper__clock-hand\",\n        css: _clockHand.line,\n        x1: _constants.CLOCK_RADIUS,\n        y1: _constants.CLOCK_RADIUS,\n        x2: _constants.CLOCK_RADIUS,\n        y2: length,\n        strokeWidth: \"1\",\n        \"data-testid\": \"clock-hand\"\n      }), (0, _jsxRuntime.jsx)(\"circle\", {\n        className: \"react-timekeeper__hand-circle-center\",\n        css: _clockHand.centerCircle,\n        cx: _constants.CLOCK_RADIUS,\n        cy: _constants.CLOCK_RADIUS,\n        r: 1.5\n      }), (0, _jsxRuntime.jsx)(_reactSpring.animated.circle, {\n        className: \"react-timekeeper__hand-circle-outer\",\n        css: _clockHand.outerCircle,\n        cx: _constants.CLOCK_RADIUS,\n        cy: position,\n        r: circleRadius\n      }), showIntermediateValueDisplay]\n    })\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","ClockHand","_react","require","_reactSpring","_utils","_constants","_clockHand","_math","_jsxRuntime","rotate","r","concat","CLOCK_RADIUS","getAngle","mode","time","increments","CLOCK_VALUES","getTimeValue","_ref","prevState","useRef","dragCount","inner","hour","handLength","getClockHandLength","circlePosition","getClockHandCirclePosition","circleRadius","getClockHandCircleRadius","anim","api","useSpring","immediate","rotation","length","position","useEffect","current","get","next","finalAngle","calcAnimationAngle","start","isSameTime","showIntermediateValueDisplay","MODE","MINUTES","jsx","className","css","intermediateMinuteCircle","cx","cy","NUMBER_OUTER_POSITION","width","CLOCK_SIZE","height","viewBox","xmlns","children","jsxs","animated","g","transform","to","a","line","x1","y1","x2","y2","strokeWidth","centerCircle","circle","outerCircle"],"sources":["C:/Users/groop/social_media_dashboard/frontend/node_modules/react-timekeeper/lib/components/ClockHand.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ClockHand;\n\nvar _react = require(\"react\");\n\nvar _reactSpring = require(\"react-spring\");\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _clockHand = require(\"./styles/clock-hand\");\n\nvar _math = require(\"../helpers/math\");\n\nvar _jsxRuntime = require(\"@emotion/react/jsx-runtime\");\n\nfunction rotate(r) {\n  return \"rotate(\".concat(r, \" \").concat(_constants.CLOCK_RADIUS, \" \").concat(_constants.CLOCK_RADIUS, \")\");\n}\n\nfunction getAngle(mode, time) {\n  const increments = _constants.CLOCK_VALUES[mode].increments;\n  const value = (0, _utils.getTimeValue)(mode, time);\n  return value * (360 / increments);\n}\n\nfunction ClockHand(_ref) {\n  let {\n    mode,\n    time\n  } = _ref;\n  const prevState = (0, _react.useRef)({\n    time,\n    mode\n  });\n  const dragCount = (0, _react.useRef)(0); // clockhand positioning\n\n  const inner = time.hour > 0 && time.hour <= 12;\n  const handLength = (0, _constants.getClockHandLength)(mode, inner);\n  const circlePosition = (0, _constants.getClockHandCirclePosition)(mode, inner);\n  const circleRadius = (0, _constants.getClockHandCircleRadius)(mode, inner);\n  const [anim, api] = (0, _reactSpring.useSpring)(() => {\n    return {\n      immediate: true,\n      rotation: getAngle(mode, time),\n      length: handLength,\n      position: circlePosition\n    };\n  });\n  const {\n    rotation,\n    length,\n    position\n  } = anim;\n  (0, _react.useEffect)(() => {\n    const current = rotation.get();\n    const next = getAngle(mode, time);\n\n    if (prevState.current.mode !== mode) {\n      dragCount.current = 0;\n      prevState.current.mode = mode; // mode changed, animate clockhand to next mode angle\n\n      const finalAngle = (0, _math.calcAnimationAngle)(current, next);\n      api.start({\n        immediate: false,\n        rotation: finalAngle,\n        length: handLength,\n        position: circlePosition\n      });\n    } else if (!(0, _utils.isSameTime)(prevState.current.time, time)) {\n      // time changed, no animation necessary - just update clockhand (without animation)\n      prevState.current.time = time;\n      dragCount.current++;\n      /*\n      TODO - consider making this a config option?\n      if on hour mode and `switchToMinuteOnHourSelect` is enabled, don't display\n      change in time, just wait for mode to change\n      */\n      // if (isHourMode(mode) && config.switchToMinuteOnHourSelect && dragCount.current < 2) {\n      // \treturn\n      // }\n\n      api.start({\n        immediate: true,\n        rotation: next,\n        length: handLength,\n        position: circlePosition\n      });\n    }\n  }, [circlePosition, handLength, mode, rotation, api, time]); // mini circle on clockhand between increments on minutes\n\n  const value = (0, _utils.getTimeValue)(mode, time);\n  let showIntermediateValueDisplay;\n\n  if (mode === _constants.MODE.MINUTES && value % 5) {\n    showIntermediateValueDisplay = (0, _jsxRuntime.jsx)(\"circle\", {\n      className: \"react-timekeeper__hand-intermediate-circle\",\n      css: _clockHand.intermediateMinuteCircle,\n      cx: _constants.CLOCK_RADIUS,\n      cy: _constants.NUMBER_OUTER_POSITION,\n      r: 4\n    });\n  }\n\n  return (0, _jsxRuntime.jsx)(\"svg\", {\n    width: _constants.CLOCK_SIZE,\n    height: _constants.CLOCK_SIZE,\n    viewBox: \"0 0 \".concat(_constants.CLOCK_SIZE, \" \").concat(_constants.CLOCK_SIZE),\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"react-timekeeper__clock-hand\",\n    children: (0, _jsxRuntime.jsxs)(_reactSpring.animated.g, {\n      transform: rotation.to(a => rotate(a)),\n      children: [(0, _jsxRuntime.jsx)(_reactSpring.animated.line, {\n        className: \"react-timekeeper__clock-hand\",\n        css: _clockHand.line,\n        x1: _constants.CLOCK_RADIUS,\n        y1: _constants.CLOCK_RADIUS,\n        x2: _constants.CLOCK_RADIUS,\n        y2: length,\n        strokeWidth: \"1\",\n        \"data-testid\": \"clock-hand\"\n      }), (0, _jsxRuntime.jsx)(\"circle\", {\n        className: \"react-timekeeper__hand-circle-center\",\n        css: _clockHand.centerCircle,\n        cx: _constants.CLOCK_RADIUS,\n        cy: _constants.CLOCK_RADIUS,\n        r: 1.5\n      }), (0, _jsxRuntime.jsx)(_reactSpring.animated.circle, {\n        className: \"react-timekeeper__hand-circle-outer\",\n        css: _clockHand.outerCircle,\n        cx: _constants.CLOCK_RADIUS,\n        cy: position,\n        r: circleRadius\n      }), showIntermediateValueDisplay]\n    })\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}