{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TIME_PARSE_24 = void 0;\nexports.composeTime = composeTime;\nexports.parseMeridiem = parseMeridiem;\nexports.parseTime = parseTime;\nconst TIME_PARSE_MERIDIEM = new RegExp(/^(\\d{1,2}?):(\\d{2}?)\\s?(am|pm)$/i);\nconst TIME_PARSE_24 = new RegExp(/^(\\d{1,2}?):(\\d{2}?)$/);\nexports.TIME_PARSE_24 = TIME_PARSE_24;\nconst defaultTime = {\n  hour: 12,\n  minute: 30\n}; // parse and normalize time to 24h\n\nfunction parseTime(time) {\n  if (time == null) {\n    return defaultTime;\n  }\n  let hour = 0;\n  let minute = 0;\n  let meridiem = null; // parse basic numbers from string or object\n\n  if (typeof time === 'string') {\n    // if is string\n    let match = time.match(TIME_PARSE_MERIDIEM);\n    if (match) {\n      // 12 hr string\n      hour = parseInt(match[1], 10);\n      minute = parseInt(match[2], 10);\n      meridiem = match[3].toLowerCase();\n    } else {\n      // 24 hr string\n      match = time.match(TIME_PARSE_24);\n      if (!match) {\n        throw new Error('Could not parse time (string)');\n      }\n      hour = parseInt(match[1], 10);\n      minute = parseInt(match[2], 10);\n    }\n  } else if (typeof time === 'object') {\n    // if is object\n    if (!Number.isInteger(time.hour) || !Number.isInteger(time.minute)) {\n      throw new Error('Time and minute must both be valid integers');\n    }\n    hour = time.hour;\n    minute = time.minute;\n    if ('meridiem' in time) {\n      meridiem = time.meridiem.toLowerCase();\n    }\n  }\n  if (minute > 60) {\n    throw new Error('Minute out of range (> 60)');\n  } // normalize hours\n\n  if (meridiem != null) {\n    if (hour > 12) {\n      throw new Error('Hour out of range (> 12)');\n    } // handling the 12 hr conversion\n\n    if (meridiem === 'pm' && hour !== 12) {\n      hour += 12;\n    } else if (meridiem === 'am' && hour === 12) {\n      hour = 0;\n    }\n  } else {\n    // handling the 24 hour conversion\n    if (hour > 24) {\n      throw new Error('Hour out of range (> 24)');\n    }\n    if (hour === 24) {\n      hour = 0;\n    }\n  }\n  return {\n    hour,\n    minute\n  };\n}\nfunction parseMeridiem(time) {\n  const parsed = parseTime(time); // assumes time is 0 -> 23, where 0 is midnight\n\n  return parsed.hour >= 12 ? 'pm' : 'am';\n} // formats time output to poss to parent\n\nfunction composeTime(hour, minute, disabledTimeRangeValidator) {\n  const paddedMinute = ('0' + minute).slice(-2);\n  const hour24 = hour === 24 ? 0 : hour;\n  const meridiem = hour >= 12 ? 'pm' : 'am';\n  let hour12 = hour;\n  if (hour > 12) {\n    hour12 = hour - 12;\n  } else if (hour === 0) {\n    hour12 = hour = 12;\n  }\n  let isValid = true;\n  if (disabledTimeRangeValidator) {\n    if (!disabledTimeRangeValidator.validateHour(hour24) || !disabledTimeRangeValidator.validateMinute(hour24, minute)) {\n      isValid = false;\n    }\n  }\n  return {\n    formatted24: \"\".concat(hour24, \":\").concat(paddedMinute),\n    formatted12: \"\".concat(hour12, \":\").concat(paddedMinute, \" \").concat(meridiem),\n    formattedSimple: \"\".concat(hour12, \":\").concat(paddedMinute),\n    hour: hour24,\n    hour12,\n    minute,\n    meridiem,\n    isValid\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","TIME_PARSE_24","composeTime","parseMeridiem","parseTime","TIME_PARSE_MERIDIEM","RegExp","defaultTime","hour","minute","time","meridiem","match","parseInt","toLowerCase","Error","Number","isInteger","parsed","disabledTimeRangeValidator","paddedMinute","slice","hour24","hour12","isValid","validateHour","validateMinute","formatted24","concat","formatted12","formattedSimple"],"sources":["C:/Users/groop/social_media_dashboard/frontend/node_modules/react-timekeeper/lib/helpers/time.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TIME_PARSE_24 = void 0;\nexports.composeTime = composeTime;\nexports.parseMeridiem = parseMeridiem;\nexports.parseTime = parseTime;\nconst TIME_PARSE_MERIDIEM = new RegExp(/^(\\d{1,2}?):(\\d{2}?)\\s?(am|pm)$/i);\nconst TIME_PARSE_24 = new RegExp(/^(\\d{1,2}?):(\\d{2}?)$/);\nexports.TIME_PARSE_24 = TIME_PARSE_24;\nconst defaultTime = {\n  hour: 12,\n  minute: 30\n}; // parse and normalize time to 24h\n\nfunction parseTime(time) {\n  if (time == null) {\n    return defaultTime;\n  }\n\n  let hour = 0;\n  let minute = 0;\n  let meridiem = null; // parse basic numbers from string or object\n\n  if (typeof time === 'string') {\n    // if is string\n    let match = time.match(TIME_PARSE_MERIDIEM);\n\n    if (match) {\n      // 12 hr string\n      hour = parseInt(match[1], 10);\n      minute = parseInt(match[2], 10);\n      meridiem = match[3].toLowerCase();\n    } else {\n      // 24 hr string\n      match = time.match(TIME_PARSE_24);\n\n      if (!match) {\n        throw new Error('Could not parse time (string)');\n      }\n\n      hour = parseInt(match[1], 10);\n      minute = parseInt(match[2], 10);\n    }\n  } else if (typeof time === 'object') {\n    // if is object\n    if (!Number.isInteger(time.hour) || !Number.isInteger(time.minute)) {\n      throw new Error('Time and minute must both be valid integers');\n    }\n\n    hour = time.hour;\n    minute = time.minute;\n\n    if ('meridiem' in time) {\n      meridiem = time.meridiem.toLowerCase();\n    }\n  }\n\n  if (minute > 60) {\n    throw new Error('Minute out of range (> 60)');\n  } // normalize hours\n\n\n  if (meridiem != null) {\n    if (hour > 12) {\n      throw new Error('Hour out of range (> 12)');\n    } // handling the 12 hr conversion\n\n\n    if (meridiem === 'pm' && hour !== 12) {\n      hour += 12;\n    } else if (meridiem === 'am' && hour === 12) {\n      hour = 0;\n    }\n  } else {\n    // handling the 24 hour conversion\n    if (hour > 24) {\n      throw new Error('Hour out of range (> 24)');\n    }\n\n    if (hour === 24) {\n      hour = 0;\n    }\n  }\n\n  return {\n    hour,\n    minute\n  };\n}\n\nfunction parseMeridiem(time) {\n  const parsed = parseTime(time); // assumes time is 0 -> 23, where 0 is midnight\n\n  return parsed.hour >= 12 ? 'pm' : 'am';\n} // formats time output to poss to parent\n\n\nfunction composeTime(hour, minute, disabledTimeRangeValidator) {\n  const paddedMinute = ('0' + minute).slice(-2);\n  const hour24 = hour === 24 ? 0 : hour;\n  const meridiem = hour >= 12 ? 'pm' : 'am';\n  let hour12 = hour;\n\n  if (hour > 12) {\n    hour12 = hour - 12;\n  } else if (hour === 0) {\n    hour12 = hour = 12;\n  }\n\n  let isValid = true;\n\n  if (disabledTimeRangeValidator) {\n    if (!disabledTimeRangeValidator.validateHour(hour24) || !disabledTimeRangeValidator.validateMinute(hour24, minute)) {\n      isValid = false;\n    }\n  }\n\n  return {\n    formatted24: \"\".concat(hour24, \":\").concat(paddedMinute),\n    formatted12: \"\".concat(hour12, \":\").concat(paddedMinute, \" \").concat(meridiem),\n    formattedSimple: \"\".concat(hour12, \":\").concat(paddedMinute),\n    hour: hour24,\n    hour12,\n    minute,\n    meridiem,\n    isValid\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}