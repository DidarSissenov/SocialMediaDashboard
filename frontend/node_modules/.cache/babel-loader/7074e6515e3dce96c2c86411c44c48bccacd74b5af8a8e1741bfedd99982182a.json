{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Calendar,momentLocalizer}from'react-big-calendar';import moment from'moment';import Modal from'react-modal';import DatePicker from'react-datepicker';import TimePicker from'react-time-picker';import'react-big-calendar/lib/css/react-big-calendar.css';import'./PostScheduler.css';import'react-datepicker/dist/react-datepicker.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const localizer=momentLocalizer(moment);Modal.setAppElement('#root');const PostScheduler=()=>{const[modalIsOpen,setModalIsOpen]=useState(false);const[selectedDate,setSelectedDate]=useState(new Date());const[selectedTime,setSelectedTime]=useState('10:00');const[events,setEvents]=useState([]);const[postDetails,setPostDetails]=useState({title:'',description:''});const openModal=()=>setModalIsOpen(true);const closeModal=()=>setModalIsOpen(false);const handleDateChange=date=>setSelectedDate(date);const handleTimeChange=time=>setSelectedTime(time);const handleInputChange=e=>setPostDetails({...postDetails,[e.target.name]:e.target.value});const handleSubmit=async e=>{e.preventDefault();const eventDate=moment(selectedDate).set({hour:moment(selectedTime,'HH:mm').hour(),minute:moment(selectedTime,'HH:mm').minute()}).toDate();try{await axios.post('/api/instagram/schedule-post',{title:postDetails.title,description:postDetails.description,date:eventDate});setEvents([...events,{title:postDetails.title,start:eventDate,end:eventDate}]);closeModal();}catch(error){console.error('Error scheduling post:',error);}};useEffect(()=>{const fetchScheduledPosts=async()=>{try{const response=await axios.get('/api/auth/scheduled-posts');const fetchedEvents=response.data.map(post=>({title:post.title,start:new Date(post.date),end:new Date(post.date)}));setEvents(fetchedEvents);}catch(error){console.error('Error fetching scheduled posts:',error);}};fetchScheduledPosts();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"post-scheduler\",children:[/*#__PURE__*/_jsx(Calendar,{localizer:localizer,events:events,startAccessor:\"start\",endAccessor:\"end\",style:{height:500,margin:'50px'},views:['month','week','day']}),/*#__PURE__*/_jsx(\"button\",{className:\"add-post-btn\",onClick:openModal,children:\"Add Post\"}),/*#__PURE__*/_jsx(Modal,{isOpen:modalIsOpen,onRequestClose:closeModal,className:\"modal\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"modal-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Schedule a Post\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",value:postDetails.title,onChange:handleInputChange,placeholder:\"Title\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",value:postDetails.description,onChange:handleInputChange,placeholder:\"Description\"}),/*#__PURE__*/_jsx(DatePicker,{selected:selectedDate,onChange:handleDateChange}),/*#__PURE__*/_jsx(TimePicker,{onChange:handleTimeChange,value:selectedTime}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",children:\"Schedule\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeModal,className:\"cancel-btn\",children:\"Cancel\"})]})})]});};export default PostScheduler;","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","Modal","DatePicker","TimePicker","jsx","_jsx","jsxs","_jsxs","localizer","setAppElement","PostScheduler","modalIsOpen","setModalIsOpen","selectedDate","setSelectedDate","Date","selectedTime","setSelectedTime","events","setEvents","postDetails","setPostDetails","title","description","openModal","closeModal","handleDateChange","date","handleTimeChange","time","handleInputChange","e","target","name","value","handleSubmit","preventDefault","eventDate","set","hour","minute","toDate","axios","post","start","end","error","console","fetchScheduledPosts","response","get","fetchedEvents","data","map","className","children","startAccessor","endAccessor","style","height","margin","views","onClick","isOpen","onRequestClose","onSubmit","type","onChange","placeholder","selected"],"sources":["C:/Users/groop/social_media_dashboard/frontend/src/components/PostScheduler.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DatePicker from 'react-datepicker';\r\nimport TimePicker from 'react-time-picker';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport './PostScheduler.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PostScheduler = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedTime, setSelectedTime] = useState('10:00');\r\n  const [events, setEvents] = useState([]);\r\n  const [postDetails, setPostDetails] = useState({ title: '', description: '' });\r\n\r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeModal = () => setModalIsOpen(false);\r\n\r\n  const handleDateChange = date => setSelectedDate(date);\r\n  const handleTimeChange = time => setSelectedTime(time);\r\n  const handleInputChange = e => setPostDetails({ ...postDetails, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const eventDate = moment(selectedDate).set({\r\n      hour: moment(selectedTime, 'HH:mm').hour(),\r\n      minute: moment(selectedTime, 'HH:mm').minute(),\r\n    }).toDate();\r\n  \r\n    try {\r\n      await axios.post('/api/instagram/schedule-post', {\r\n        title: postDetails.title,\r\n        description: postDetails.description,\r\n        date: eventDate,\r\n      });\r\n      setEvents([...events, { title: postDetails.title, start: eventDate, end: eventDate }]);\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error('Error scheduling post:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchScheduledPosts = async () => {\r\n      try {\r\n        const response = await axios.get('/api/auth/scheduled-posts');\r\n        const fetchedEvents = response.data.map(post => ({\r\n          title: post.title,\r\n          start: new Date(post.date),\r\n          end: new Date(post.date),\r\n        }));\r\n        setEvents(fetchedEvents);\r\n      } catch (error) {\r\n        console.error('Error fetching scheduled posts:', error);\r\n      }\r\n    };\r\n  \r\n    fetchScheduledPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"post-scheduler\">\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500, margin: '50px' }}\r\n        views={['month', 'week', 'day']}\r\n      />\r\n      <button className=\"add-post-btn\" onClick={openModal}>Add Post</button>\r\n      \r\n      <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className=\"modal\">\r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <h2>Schedule a Post</h2>\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\" \r\n            value={postDetails.title}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Title\" \r\n          />\r\n          <textarea \r\n            name=\"description\" \r\n            value={postDetails.description}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Description\"\r\n          />\r\n          <DatePicker selected={selectedDate} onChange={handleDateChange} />\r\n          <TimePicker onChange={handleTimeChange} value={selectedTime} />\r\n          <button type=\"submit\" className=\"submit-btn\">Schedule</button>\r\n          <button onClick={closeModal} className=\"cancel-btn\">Cancel</button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostScheduler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}