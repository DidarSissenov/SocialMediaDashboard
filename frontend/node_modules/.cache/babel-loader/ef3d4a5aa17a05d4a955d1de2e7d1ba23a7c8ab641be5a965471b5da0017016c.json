{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numbersWrapperStyle = exports.numbersStyle = void 0;\nvar _react = require(\"@emotion/react\");\nvar _constants = require(\"../../helpers/constants\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nconst CLOCK_NUMBER_COLOR = '#999999';\nconst CLOCK_NUMBER_COLOR_DISABLED = '#ddd';\nfunction getFontSize(hour24Mode, inner) {\n  if (!hour24Mode) {\n    return \"var(--numbers-font-size-reg, \".concat(_constants.NUMBER_REGULAR_FONT_SIZE, \"px)\");\n  }\n  return inner ? \"var(--numbers-font-size-inner, \".concat(_constants.HOUR_24_INNER_FONT_SIZE, \"px)\") : \"var(--numbers-font-size-outer, \".concat(_constants.HOUR_24_OUTER_FONT_SIZE, \"px)\");\n}\nconst enabledColor = \"var(--numbers-text-color, \".concat(CLOCK_NUMBER_COLOR, \")\");\nconst disabledColor = \"var(--numbers-text-color-disabled, \".concat(CLOCK_NUMBER_COLOR_DISABLED, \")\");\nconst numbersStyle = _ref => {\n  let {\n    hour24Mode = false,\n    inner = false,\n    enabled = true\n  } = _ref;\n  return /*#__PURE__*/(0, _react.css)(\"display:inline-block;position:absolute;color:\", enabled ? enabledColor : disabledColor, \";transition:color 0.15s ease-out;pointer-events:none;border-radius:99px;width:\", _constants.NUMBER_RADIUS_REGULAR, \"px;height:\", _constants.NUMBER_RADIUS_REGULAR, \"px;text-align:center;line-height:\", _constants.NUMBER_RADIUS_REGULAR, \"px;z-index:5;font-size:\", getFontSize(hour24Mode, inner), \";\" + (process.env.NODE_ENV === \"production\" ? \"\" : \";label:numbersStyle;\"), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3N0eWxlcy9udW1iZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlDZ0IiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvc3R5bGVzL251bWJlcnMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCdcbmltcG9ydCB7XG5cdE5VTUJFUl9SQURJVVNfUkVHVUxBUixcblx0TlVNQkVSX1JFR1VMQVJfRk9OVF9TSVpFLFxuXHRIT1VSXzI0X0lOTkVSX0ZPTlRfU0laRSxcblx0SE9VUl8yNF9PVVRFUl9GT05UX1NJWkUsXG59IGZyb20gJy4uLy4uL2hlbHBlcnMvY29uc3RhbnRzJ1xuXG5jb25zdCBDTE9DS19OVU1CRVJfQ09MT1IgPSAnIzk5OTk5OSdcbmNvbnN0IENMT0NLX05VTUJFUl9DT0xPUl9ESVNBQkxFRCA9ICcjZGRkJ1xuXG5mdW5jdGlvbiBnZXRGb250U2l6ZShob3VyMjRNb2RlOiBib29sZWFuLCBpbm5lcjogYm9vbGVhbik6IHN0cmluZyB7XG5cdGlmICghaG91cjI0TW9kZSkge1xuXHRcdHJldHVybiBgdmFyKC0tbnVtYmVycy1mb250LXNpemUtcmVnLCAke05VTUJFUl9SRUdVTEFSX0ZPTlRfU0laRX1weClgXG5cdH1cblx0cmV0dXJuIGlubmVyXG5cdFx0PyBgdmFyKC0tbnVtYmVycy1mb250LXNpemUtaW5uZXIsICR7SE9VUl8yNF9JTk5FUl9GT05UX1NJWkV9cHgpYFxuXHRcdDogYHZhcigtLW51bWJlcnMtZm9udC1zaXplLW91dGVyLCAke0hPVVJfMjRfT1VURVJfRk9OVF9TSVpFfXB4KWBcbn1cblxuaW50ZXJmYWNlIFByb3BzIHtcblx0aG91cjI0TW9kZT86IGJvb2xlYW5cblx0aW5uZXI/OiBib29sZWFuXG5cdGVuYWJsZWQ/OiBib29sZWFuXG59XG5cbmNvbnN0IGVuYWJsZWRDb2xvciA9IGB2YXIoLS1udW1iZXJzLXRleHQtY29sb3IsICR7Q0xPQ0tfTlVNQkVSX0NPTE9SfSlgXG5jb25zdCBkaXNhYmxlZENvbG9yID0gYHZhcigtLW51bWJlcnMtdGV4dC1jb2xvci1kaXNhYmxlZCwgJHtDTE9DS19OVU1CRVJfQ09MT1JfRElTQUJMRUR9KWBcblxuZXhwb3J0IGNvbnN0IG51bWJlcnNTdHlsZSA9ICh7XG5cdGhvdXIyNE1vZGUgPSBmYWxzZSxcblx0aW5uZXIgPSBmYWxzZSxcblx0ZW5hYmxlZCA9IHRydWUsXG59OiBQcm9wcykgPT4gY3NzYFxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0Y29sb3I6ICR7ZW5hYmxlZCA/IGVuYWJsZWRDb2xvciA6IGRpc2FibGVkQ29sb3J9O1xuXHR0cmFuc2l0aW9uOiBjb2xvciAwLjE1cyBlYXNlLW91dDtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cdGJvcmRlci1yYWRpdXM6IDk5cHg7XG5cdHdpZHRoOiAke05VTUJFUl9SQURJVVNfUkVHVUxBUn1weDtcblx0aGVpZ2h0OiAke05VTUJFUl9SQURJVVNfUkVHVUxBUn1weDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRsaW5lLWhlaWdodDogJHtOVU1CRVJfUkFESVVTX1JFR1VMQVJ9cHg7XG5cdHotaW5kZXg6IDU7XG5cdGZvbnQtc2l6ZTogJHtnZXRGb250U2l6ZShob3VyMjRNb2RlLCBpbm5lcil9O1xuYFxuXG4vLyB6LWluZGV4IHJlcXVpcmVkIHRvIGJlIG9uIHRvcCBvZiBjbG9ja2hhbmRcbmV4cG9ydCBjb25zdCBudW1iZXJzV3JhcHBlclN0eWxlID0gY3NzYFxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdGxlZnQ6IDA7XG5cdHRvcDogMDtcblx0ei1pbmRleDogMjtcbmBcbiJdfQ== */\");\n}; // z-index required to be on top of clockhand\n\nexports.numbersStyle = numbersStyle;\nconst numbersWrapperStyle = process.env.NODE_ENV === \"production\" ? {\n  name: \"110a76v\",\n  styles: \"position:absolute;left:0;top:0;z-index:2\"\n} : {\n  name: \"m7oa3k-numbersWrapperStyle\",\n  styles: \"position:absolute;left:0;top:0;z-index:2;label:numbersWrapperStyle;\",\n  map: \"\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nexports.numbersWrapperStyle = numbersWrapperStyle;","map":{"version":3,"names":[],"sources":["C:\\Users\\groop\\social_media_dashboard\\frontend\\node_modules\\react-timekeeper\\src\\components\\styles\\numbers.ts"],"sourcesContent":["import { css } from '@emotion/react'\nimport {\n\tNUMBER_RADIUS_REGULAR,\n\tNUMBER_REGULAR_FONT_SIZE,\n\tHOUR_24_INNER_FONT_SIZE,\n\tHOUR_24_OUTER_FONT_SIZE,\n} from '../../helpers/constants'\n\nconst CLOCK_NUMBER_COLOR = '#999999'\nconst CLOCK_NUMBER_COLOR_DISABLED = '#ddd'\n\nfunction getFontSize(hour24Mode: boolean, inner: boolean): string {\n\tif (!hour24Mode) {\n\t\treturn `var(--numbers-font-size-reg, ${NUMBER_REGULAR_FONT_SIZE}px)`\n\t}\n\treturn inner\n\t\t? `var(--numbers-font-size-inner, ${HOUR_24_INNER_FONT_SIZE}px)`\n\t\t: `var(--numbers-font-size-outer, ${HOUR_24_OUTER_FONT_SIZE}px)`\n}\n\ninterface Props {\n\thour24Mode?: boolean\n\tinner?: boolean\n\tenabled?: boolean\n}\n\nconst enabledColor = `var(--numbers-text-color, ${CLOCK_NUMBER_COLOR})`\nconst disabledColor = `var(--numbers-text-color-disabled, ${CLOCK_NUMBER_COLOR_DISABLED})`\n\nexport const numbersStyle = ({\n\thour24Mode = false,\n\tinner = false,\n\tenabled = true,\n}: Props) => css`\n\tdisplay: inline-block;\n\tposition: absolute;\n\tcolor: ${enabled ? enabledColor : disabledColor};\n\ttransition: color 0.15s ease-out;\n\tpointer-events: none;\n\tborder-radius: 99px;\n\twidth: ${NUMBER_RADIUS_REGULAR}px;\n\theight: ${NUMBER_RADIUS_REGULAR}px;\n\ttext-align: center;\n\tline-height: ${NUMBER_RADIUS_REGULAR}px;\n\tz-index: 5;\n\tfont-size: ${getFontSize(hour24Mode, inner)};\n`\n\n// z-index required to be on top of clockhand\nexport const numbersWrapperStyle = css`\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tz-index: 2;\n`\n"],"mappings":"AAiDsC"},"metadata":{},"sourceType":"script","externalDependencies":[]}