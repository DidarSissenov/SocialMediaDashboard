{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{LineChart,Line,CartesianGrid,XAxis,YAxis,Tooltip,ResponsiveContainer}from'recharts';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[isInstagramLinked,setIsInstagramLinked]=useState(false);const[isTwitterLinked,setIsTwitterLinked]=useState(false);const[instagramData,setInstagramData]=useState(null);const[twitterData,setTwitterData]=useState(null);const[plannedPosts,setPlannedPosts]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const navigate=useNavigate();// Check if Instagram is linked\nconst checkInstagramLink=async()=>{try{const response=await axios.get('/api/instagram/check-link');setIsInstagramLinked(response.data.isLinked);}catch(error){console.error('Error checking Instagram link:',error);throw error;}};// Check if Twitter is linked\nconst checkTwitterLink=async()=>{try{const response=await axios.get('/api/twitter/check-link');setIsTwitterLinked(response.data.isLinked);}catch(error){console.error('Error checking Twitter link:',error);throw error;}};// Fetch Instagram data\nconst fetchInstagramData=async()=>{if(!isInstagramLinked)return;try{const response=await axios.get('/api/instagram/data');setInstagramData(response.data);}catch(error){console.error('Error fetching Instagram data:',error);throw error;}};// Fetch planned posts\nconst fetchPlannedPosts=async()=>{try{const response=await axios.get('/api/posts');setPlannedPosts(response.data);}catch(error){console.error('Error fetching planned posts:',error);throw error;}};// Fetch Twitter data\nconst fetchTwitterData=async()=>{if(!isTwitterLinked)return;try{const response=await axios.get('/api/twitter/data');setTwitterData(response.data);}catch(error){console.error('Error fetching Twitter data:',error);throw error;}};// Combine all data fetching with improved error handling\nconst fetchData=async()=>{try{setLoading(true);await Promise.all([checkInstagramLink(),checkTwitterLink(),fetchInstagramData(),fetchPlannedPosts(),fetchTwitterData()]);}catch(error){setError('Failed to load data. Please try again later.');}finally{setLoading(false);}};useEffect(()=>{fetchData();},[]);const navigateToScheduler=()=>{navigate('/post-scheduler');};const renderContent=()=>{return/*#__PURE__*/_jsxs(_Fragment,{children:[instagramData&&/*#__PURE__*/_jsx(\"div\",{className:\"instagram-info\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Instagram Profile Information\"})}),twitterData&&/*#__PURE__*/_jsx(\"div\",{className:\"twitter-info\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Twitter Profile Information\"})}),plannedPosts.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"planned-posts\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Planned Posts\"})})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Social Media Analytics Dashboard\"}),/*#__PURE__*/_jsxs(\"nav\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:navigateToScheduler,children:\"Go to Post Scheduler\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.href='/api/instagram/oauth',children:isInstagramLinked?'Re-link Instagram':'Link Instagram'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.href='/api/twitter/oauth',children:isTwitterLinked?'Re-link Twitter':'Link Twitter'})]})]}),loading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):error?/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]}):renderContent()]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","ResponsiveContainer","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Dashboard","isInstagramLinked","setIsInstagramLinked","isTwitterLinked","setIsTwitterLinked","instagramData","setInstagramData","twitterData","setTwitterData","plannedPosts","setPlannedPosts","loading","setLoading","error","setError","navigate","checkInstagramLink","response","get","data","isLinked","console","checkTwitterLink","fetchInstagramData","fetchPlannedPosts","fetchTwitterData","fetchData","Promise","all","navigateToScheduler","renderContent","children","className","length","onClick","window","location","href"],"sources":["C:/Users/groop/social_media_dashboard/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst Dashboard = () => {\r\n    const [isInstagramLinked, setIsInstagramLinked] = useState(false);\r\n    const [isTwitterLinked, setIsTwitterLinked] = useState(false);\r\n    const [instagramData, setInstagramData] = useState(null);\r\n    const [twitterData, setTwitterData] = useState(null);\r\n    const [plannedPosts, setPlannedPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // Check if Instagram is linked\r\n    const checkInstagramLink = async () => {\r\n        try {\r\n            const response = await axios.get('/api/instagram/check-link');\r\n            setIsInstagramLinked(response.data.isLinked);\r\n        } catch (error) {\r\n            console.error('Error checking Instagram link:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // Check if Twitter is linked\r\n    const checkTwitterLink = async () => {\r\n        try {\r\n            const response = await axios.get('/api/twitter/check-link');\r\n            setIsTwitterLinked(response.data.isLinked);\r\n        } catch (error) {\r\n            console.error('Error checking Twitter link:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // Fetch Instagram data\r\n    const fetchInstagramData = async () => {\r\n        if (!isInstagramLinked) return;\r\n        try {\r\n            const response = await axios.get('/api/instagram/data');\r\n            setInstagramData(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching Instagram data:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // Fetch planned posts\r\n    const fetchPlannedPosts = async () => {\r\n        try {\r\n            const response = await axios.get('/api/posts');\r\n            setPlannedPosts(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching planned posts:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // Fetch Twitter data\r\n    const fetchTwitterData = async () => {\r\n        if (!isTwitterLinked) return;\r\n        try {\r\n            const response = await axios.get('/api/twitter/data');\r\n            setTwitterData(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching Twitter data:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // Combine all data fetching with improved error handling\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            await Promise.all([\r\n                checkInstagramLink(),\r\n                checkTwitterLink(),\r\n                fetchInstagramData(),\r\n                fetchPlannedPosts(),\r\n                fetchTwitterData()\r\n            ]);\r\n        } catch (error) {\r\n            setError('Failed to load data. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const navigateToScheduler = () => {\r\n        navigate('/post-scheduler');\r\n    };\r\n\r\n    const renderContent = () => {\r\n        return (\r\n            <>\r\n                {instagramData && (\r\n                    <div className=\"instagram-info\">\r\n                        <h2>Instagram Profile Information</h2>\r\n                        {/* Display Instagram profile information */}\r\n                    </div>\r\n                )}\r\n\r\n                {twitterData && (\r\n                    <div className=\"twitter-info\">\r\n                        <h2>Twitter Profile Information</h2>\r\n                        {/* Display Twitter profile information */}\r\n                    </div>\r\n                )}\r\n\r\n                {plannedPosts.length > 0 && (\r\n                    <div className=\"planned-posts\">\r\n                        <h2>Planned Posts</h2>\r\n                        {/* Display planned posts */}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <header className=\"dashboard-header\">\r\n                <h1>Social Media Analytics Dashboard</h1>\r\n                <nav>\r\n                    <button onClick={navigateToScheduler}>Go to Post Scheduler</button>\r\n                    <button onClick={() => window.location.href = '/api/instagram/oauth'}>\r\n                        {isInstagramLinked ? 'Re-link Instagram' : 'Link Instagram'}\r\n                    </button>\r\n                    <button onClick={() => window.location.href = '/api/twitter/oauth'}>\r\n                        {isTwitterLinked ? 'Re-link Twitter' : 'Link Twitter'}\r\n                    </button>\r\n                </nav>\r\n            </header>\r\n\r\n            {loading ? (\r\n                <div>Loading...</div>\r\n            ) : error ? (\r\n                <div>Error: {error}</div>\r\n            ) : (\r\n                renderContent()\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}